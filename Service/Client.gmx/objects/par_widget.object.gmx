<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// variables init
width = 300;
height = 150;

base_point = array_create(2);
base_position = array_create(2);
click = false;
over = false;
gray = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// mouse event
if(mouse_x &gt; x - width/2)and(mouse_x &lt; x + width/2)and(mouse_y &gt; y - height/2 - 20)and(mouse_y &lt; y - height/2)
    over = true;
else
    over = false;
    
if(mouse_check_button_pressed(mb_left)) {
    with(par_widget) {
        depth++;
    }
    if(mouse_x &lt; x + width/2 - 5)and(y &gt; y - height/2 + 5 - 20)and(x &gt; x + width/2 - 15)and(y &lt; y - height/2 + 15 - 20)
        instance_destroy();
    
    if(over) {
<<<<<<< HEAD
<<<<<<< HEAD
        if(mouse_x &gt; x + width/2 - 20)and(mouse_x &lt; x + width/2)and(mouse_y &gt; y - height/2 - 20)and(mouse_y &lt; y - height/2) {
            scale = true;
            base_position[0] = width
            base_position[1] = height
            base_position2[0] = x
            base_position2[1] = y
            base_point[0] = mouse_x
            base_point[1] = mouse_y
        }else {
            scale = false;
            base_position[0] = x
            base_position[1] = y
            base_point[0] = mouse_x
            base_point[1] = mouse_y
        }
=======
=======
>>>>>>> parent of 8a0a692... resize, remove window function added
        base_position[0] = x
        base_position[1] = y
        base_point[0] = mouse_x
        base_point[1] = mouse_y
<<<<<<< HEAD
>>>>>>> parent of 8a0a692... resize, remove window function added
=======
>>>>>>> parent of 8a0a692... resize, remove window function added
        click = true;
        depth = 0;
    }
}

if(mouse_check_button_released(mb_left)) {
    click = false;
}

if(click) {
    x = base_position[0] - (base_point[0] - mouse_x)
    y = base_position[1] - (base_point[1] - mouse_y)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
draw_rectangle(x - width/2, y - height/2, x + width/2, y + height/2, false);

<<<<<<< HEAD
<<<<<<< HEAD
draw_set_color(global.iuMint);
draw_rectangle(x- width/2, y - height/2 - 20, x + width/2, y - height/2, false);


draw_set_color(c_black);
draw_rectangle(x - width/2, y - height/2, x + width/2, y + height/2, true);
draw_rectangle(x - width/2, y - height/2, x + width/2, y - height/2 - 20, true);

draw_set_color(c_red);
draw_rectangle(x + width/2 - 5, y - height/2 + 5 - 20, x + width/2 - 15, y - height/2 + 15 - 20, false);
=======
=======
>>>>>>> parent of 8a0a692... resize, remove window function added
draw_set_color(c_black);
draw_rectangle(x - width/2, y - height/2, x + width/2, y + height/2, true);

if(over) {
    draw_set_color(c_gray);
    draw_rectangle(x - width/2, y - height/2, x + width/2, y + height/2, true);
    if(click) {
        draw_set_color(c_maroon);
        draw_rectangle(x - width/2, y - height/2, x + width/2, y + height/2, true);
    }
}
<<<<<<< HEAD
>>>>>>> parent of 8a0a692... resize, remove window function added
=======
>>>>>>> parent of 8a0a692... resize, remove window function added
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
